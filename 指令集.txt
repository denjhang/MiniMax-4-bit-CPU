
//------------------------------ 
以下无立即数，一个指令4bit

0 0000	NOP		空操作，啥也不干
1 0001	CMP		比较操作，不改变当前RAM单元或ACC的数值
2 0010	ADD		C+ACC+当前RAM指针指向的RAM单元，结果返回到ACC，进位输送到C寄存器
3 0011	SUB		C+ACC+取反（当前RAM指针指向的RAM单元），结果返回到ACC，进位输送到C寄存器（注：对于减法，C=0代表有借位/错位，C=1代表没有进位/错位）

4 0100	MOV A reg	将当前RAM指针指向的RAM内的内容复制到ACC	
5 0101	MOV reg A	将当前ACC内部的内容移动到当前RAM指针指向的RAM单元
6 0110	IN A		将用户按键（K3-K0）的状态输送到ACC（K3是最高位，K0最低位。按下代表该位为1，否则0）
7 0111	OUT A		将ACC内的值输送到输出，使数码管显示并锁存（大于等于10的数字不显示）

//------------------------------
以下有立即数，一个指令8bit（4+4bit）执行时，将两个4bit合并到一起执行。指令在前，立即数在后，且必须连续放置才有效。

8 1000	MVI A		将立即数（4bit）移动到ACC寄存器
9 1001	MVI ADRS	将立即数（4bit）移动到RAM指针寄存器，下次读写RAM针对该单元读写
A 1010	NOP		空操作，啥也不干
B 1011	NOP		空操作，啥也不干

C 1100	JMPZ		如果Z寄存器=1，跳转到立即数指定的单元，否则这条指令不执行
D 1101	JMPC		如果C寄存器=1，跳转到立即数指定的单元，否则这条指令不执行
E 1110	JMPNC		如果C寄存器=0，跳转到立即数指定的单元，否则这条指令不执行
F 1111	JMP		强制跳转到立即数指定的单元
